import cv2
import numpy as np
from ultralytics import YOLO
import torch
print("CUDA Available:", torch.cuda.is_available())
print("GPU Count:", torch.cuda.device_count())
print("GPU Name:", torch.cuda.get_device_name(0) if torch.cuda.is_available() else "No GPU detected")

model = YOLO("yolov10x.pt").to("cuda")

def get_yolo_detections(frame, conf_thresh=0.35):
    results = model.predict(frame, show=False, save=False, conf=conf_thresh)
    bboxes, scores = [], []
    allowed_classes = {0, 1, 2, 3, 5, 7}  # Person & Vehicle classes

    for r in results:
        for box in r.boxes:
            cls = int(box.cls[0])  # Class ID
            if cls in allowed_classes:
                x1, y1, x2, y2 = map(int, box.xyxy[0])
                confidence = float(box.conf[0]) * 100
                bboxes.append([x1, y1, x2, y2])
                scores.append(confidence)
    return np.array(bboxes, dtype=np.float32), np.array(scores, dtype=np.float32)